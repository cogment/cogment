import:
  proto:
    - data.proto

commands:
  sync: >
    cogment sync
    environment
    client
    dumb
    smart

  generate: |
    cogment run sync
    python -m pip install cogment[generate]
    cd environment; python -m cogment.generate; cd ../
    cd client; python -m cogment.generate; cd ../
    cd dumb; python -m cogment.generate; cd ../
    cd smart; python -m cogment.generate; cd ../
  
  build: cogment run sync && docker-compose build orchestrator metrics dashboard client environment dumb smart
  dashboard: docker-compose up --build dashboard
  start: docker-compose up orchestrator metrics dashboard environment dumb smart
  stop: docker-compose stop orchestrator metrics dashboard environment dumb smart
  down: docker-compose down
  client: docker-compose run --rm client

environment:
  config_type: testit.EnvConfig

trial:
  config_type: testit.TrialConfig

# Static configuration
actor_classes:
  - name: master
    action:
      space: testit.MasterAction
    observation:
      space: testit.Observation

  - name: smart
    action:
      space: testit.SmartAction
    observation:
      space: testit.Observation

  - name: dumb
    action:
      space: testit.DumbAction
    observation:
      space: testit.Observation


# Dynamic configuration (could be changed by a pre-hook)
trial_params:
  environment:
    endpoint: grpc://environment:9000
    #config: {}
  actors:
    - name: human
      actor_class: master
      endpoint: client
    - name: ai_1
      actor_class: smart
      implementation: smart_impl
      endpoint: grpc://smart:9000
    - name: ai_2
      actor_class: dumb
      implementation: dumb_impl
      endpoint: grpc://dumb:9000

