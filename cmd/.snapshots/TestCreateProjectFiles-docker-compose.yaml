version: '3.7'

services:
  grpc-cli:
    image: namely/grpc-cli:1.28_1
  dumb:
    build:
      context: dumb
      dockerfile: ../py_service.dockerfile
    restart: on-failure
    environment:
      - COGMENT_GRPC_REFLECTION=1
      - PYTHONUNBUFFERED=1

  smart:
    build:
      context: smart
      dockerfile: ../py_service.dockerfile
    restart: on-failure
    environment:
      - COGMENT_GRPC_REFLECTION=1
      - PYTHONUNBUFFERED=1


  environment:
    build:
      context: environment
      dockerfile: ../py_service.dockerfile
    restart: on-failure
    environment:
      - COGMENT_GRPC_REFLECTION=1
      - PYTHONUNBUFFERED=1

  orchestrator:
    build:
      context: .
      dockerfile: orchestrator.dockerfile
    restart: on-failure
    ports:
      - "9000:9000"
    depends_on:
      - environment
      - dumb
      - smart

  client:
    build:
      context: client
      dockerfile: ../py_service.dockerfile
    environment:
      - PYTHONUNBUFFERED=1
    stdin_open: true
    tty: true
    depends_on:
      - orchestrator

  dashboard:
    image: cogment/dashboard:latest
    ports:
      - 3003:3000/tcp
    depends_on:
      - metrics

  metrics:
    user: 0:0
    image: cogment/metrics:latest
    command: --config.file=/etc/prometheus/prometheus.yml --log.level=error
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./metrics/data:/prometheus
    ports:
      - 9090:9090/tcp

