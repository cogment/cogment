stages:
  - lint
  - build
  - publish

.use_build_env:
  image: cogment/orchestrator-build-env:v1.0.0
  before_script:
    - mkdir build
    - cd build
    - cmake ..

cpp_lint:
  extends: .use_build_env
  stage: lint
  script:
    - make format
    - git diff --exit-code

build:
  extends: .use_build_env
  stage: build
  script:
    - make

.use_docker_in_docker:
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
      # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_TOKEN

build_docker:
  extends: .use_docker_in_docker
  stage: build
  variables:
    DOCKER_HUB_IMAGE: "cogment/orchestrator"
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest .
  except:
    # This job is not run on `develop` because `publish_latest` run there and "includes" the build
    - develop

publish_latest:
  extends: .use_docker_in_docker
  stage: publish
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - develop

publish_tag:
  extends: .use_docker_in_docker
  stage: publish
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --tag $DOCKER_HUB_IMAGE:$CI_COMMIT_TAG --tag $CI_REGISTRY_IMAGE:latest --tag $DOCKER_HUB_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $CI_REGISTRY_IMAGE:latest
    - docker push $DOCKER_HUB_IMAGE:$CI_COMMIT_TAG
    - docker push $DOCKER_HUB_IMAGE:latest
  only:
    - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+(?:-[[:alnum:]]+)?$/



