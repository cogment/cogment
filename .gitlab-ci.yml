stages:
  - lint
  - test
  - build
  - publish

.base_golang:
  image: golang:1.13
  before_script:
    - apt-get update -y
    - apt-get install -y protobuf-compiler

.base_docker:
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
      # Use TLS https://docs.gitlab.com/ee/ci/docker/using_docker_build.html#tls-enabled
      DOCKER_HOST: tcp://docker:2376
      DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_TOKEN

lint:
  extends: .base_golang
  stage: lint
  script:
    - make lint

test:
  extends: .base_golang
  stage: test
  script:
    - make test-with-report
  artifacts:
    when: always
    reports:
      junit: report.xml

build_binaries:
  extends: .base_golang
  stage: build
  script:
    - make release
  artifacts:
    expire_in: 1 week
    paths:
      - build

build_docker_image:
  extends: .base_docker
  stage: build
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest .
  except:
    # This job is not run on `develop` because `publish_latest_docker_image` run there and "includes" the build
    - develop

# INTERNAL AI-R HELPER - Publish the current version from the `develop` branch with the `latest` docker tag.
publish_latest_docker_image:
  extends: .base_docker
  stage: publish
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    - docker push $CI_REGISTRY_IMAGE:latest
  only:
    - develop

publish_tagged_docker_image:
  extends: .base_docker
  stage: publish
  variables:
    DOCKER_HUB_IMAGE: "cogment/cli"
  script:
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG --tag $DOCKER_HUB_IMAGE:$CI_COMMIT_TAG .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
    - docker push $DOCKER_HUB_IMAGE:$CI_COMMIT_TAG
  only:
    - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+(?:-[[:alnum:]]+)?$/

publish_tagged_binaries:
  stage: publish
  needs: ["build_binaries"]
  image: ubuntu:focal
  script:
    - apt update -y
    - apt-get install -y gnupg2 software-properties-common
    - apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
    - apt-add-repository https://cli.github.com/packages
    - apt update -y
    - apt install gh -y
    - gh auth login --with-token < $GH_TOKEN
    - gh release create $CI_COMMIT_TAG ./build/* -t $CI_COMMIT_TAG -R cogment/cogment-cli
  only:
    - /^v[[:digit:]]+\.[[:digit:]]+\.[[:digit:]]+(?:-[[:alnum:]]+)?$/
