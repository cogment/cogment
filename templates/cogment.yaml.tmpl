{{ $config := . -}}
import:
  proto:
    - data.proto

commands:
  sync: >
    cogment sync
    {{- if $config.WebClient }}
    web-client
    {{- end }}
    environment
    client
    {{- range .ListServiceActorServices }}
    {{.Name|snakeify}}
    {{- end }}

  generate: |
    cogment run sync
    {{- if $config.WebClient }}
    cd web-client && npx cogment-js-sdk-generate && cd ../
    {{- end }}
    python -m ensurepip --upgrade
    python -m pip install cogment[generate]
    cd environment; python -m cogment.generate; cd ../
    cd client; python -m cogment.generate; cd ../
    {{- range .ListServiceActorServices }}
    cd {{.Name|snakeify}}; python -m cogment.generate; cd ../
    {{- end }}
  
  build: cogment run sync && docker-compose build orchestrator metrics dashboard client environment{{ range .ListServiceActorServices }} {{.Name|kebabify}}{{end}}{{ if $config.WebClient }} web-client{{ end }}
  dashboard: docker-compose up --build dashboard
  start: docker-compose up orchestrator metrics dashboard environment{{ range .ListServiceActorServices }} {{.Name|kebabify}}{{end}}{{ if $config.WebClient }} web-client{{ end }}
  stop: docker-compose stop orchestrator metrics dashboard environment{{ range .ListServiceActorServices }} {{.Name|kebabify}}{{end}}{{ if $config.WebClient }} web-client{{ end }}
  down: docker-compose down
  client: docker-compose run --rm client

environment:
  config_type: {{.ProjectName|snakeify}}.EnvConfig

trial:
  config_type: {{.ProjectName|snakeify}}.TrialConfig

# Static configuration
actor_classes:
{{- range .ActorClasses }}
  - name: {{.Name|snakeify}}
    action:
      space: {{$config.ProjectName|snakeify}}.{{.Name|pascalify}}Action
    observation:
      space: {{$config.ProjectName|snakeify}}.Observation
{{ if .ConfigType -}}
      config_type={{.ConfigType}},
{{- end }}
{{- end}}

# Dynamic configuration (could be changed by a pre-hook)
trial_params:
  environment:
    endpoint: grpc://environment:9000
    #config: {}
  actors:
  {{- range .TrialParams.Actors }}
    - name: {{.Name|snakeify}}
      actor_class: {{.ActorClass|snakeify}}
      {{- if computeTrialActorServiceName . | ne "client" }}
      implementation: {{.Implementation}}
      {{- end }}
      endpoint: {{.Endpoint}}
  {{- end }}
