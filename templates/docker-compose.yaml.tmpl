{{ $config := . -}}
version: '3.7'

services:
  grpc-cli:
    image: namely/grpc-cli:1.28_1

{{- range .ListServiceActorServices }}
  {{.Name|kebabify}}:
    build:
      context: {{.Name|snakeify}}
      dockerfile: ../py_service.dockerfile
    restart: on-failure
    environment:
      - COGMENT_GRPC_REFLECTION=1
      - PYTHONUNBUFFERED=1
{{end}}

  environment:
    build:
      context: environment
      dockerfile: ../py_service.dockerfile
    restart: on-failure
    environment:
      - COGMENT_GRPC_REFLECTION=1
      - PYTHONUNBUFFERED=1

  orchestrator:
    build:
      context: .
      dockerfile: orchestrator.dockerfile
    restart: on-failure
    ports:
      - "9000:9000"
    depends_on:
      - environment
{{- range .ListServiceActorServices }}
      - {{.Name|kebabify}}
{{- end }}

  client:
    build:
      context: client
      dockerfile: ../py_service.dockerfile
    environment:
      - PYTHONUNBUFFERED=1
    stdin_open: true
    tty: true
    depends_on:
      - orchestrator

{{ if $config.WebClient -}}
  web-client:
    build:
      context: web-client
      dockerfile: ../js_service.dockerfile
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_APP_VERSION=dev
    restart: on-failure
    ports:
      - "3000:3000"
    depends_on:
      - grpcwebproxy
    volumes:
      - ./grpcwebproxy/certs:/go/certs

  grpcwebproxy:
    build:
      context: ./grpcwebproxy
      dockerfile: ../grpcwebproxy.dockerfile
    restart: on-failure
    ports:
      - "9080:8080"
      - "9443:8443"
    # volumes:
    #   - ./letsencrypt/config:/etc/letsencrypt:ro
    environment:
      # - SERVER_TLS_KEY=/etc/letsencrypt/live/example.com/privkey.pem
      # - SERVER_TLS_CRT=/etc/letsencrypt/live/example.com/fullchain.pem
    depends_on:
      - orchestrator

{{- end }}
  #user: 0:0 is required so the generated files aren't created under root, and therefor unacessible by the dashboard/metrics
  dashboard:
    user: 0:0
    image: cogment/dashboard:latest
    ports:
      - 3003:3000/tcp
    depends_on:
      - metrics

  metrics:
    user: 0:0
    image: cogment/metrics:latest
    command: --config.file=/etc/prometheus/prometheus.yml --log.level=error
    volumes:
      - ./metrics/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./metrics/data:/prometheus
    ports:
      - 9090:9090/tcp
